<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sc.crm.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sc.crm.bean.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="user_state" property="userState" jdbcType="INTEGER" />
    <result column="user_pass" property="userPass" jdbcType="VARCHAR" />
    <result column="user_salt" property="userSalt" jdbcType="VARCHAR" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, dept_id, user_state, user_pass, user_salt, emp_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sc.crm.bean.User" >
    insert into users (user_id, dept_id, user_state, 
      user_pass, user_salt, emp_id
      )
    values (#{userId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{userState,jdbcType=INTEGER}, 
      #{userPass,jdbcType=VARCHAR}, #{userSalt,jdbcType=VARCHAR}, #{empId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.crm.bean.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="userState != null" >
        user_state,
      </if>
      <if test="userPass != null" >
        user_pass,
      </if>
      <if test="userSalt != null" >
        user_salt,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=INTEGER},
      </if>
      <if test="userPass != null" >
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.crm.bean.User" >
    update users
    <set >
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="userState != null" >
        user_state = #{userState,jdbcType=INTEGER},
      </if>
      <if test="userPass != null" >
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userSalt != null" >
        user_salt = #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.crm.bean.User" >
    update users
    set dept_id = #{deptId,jdbcType=INTEGER},
      user_state = #{userState,jdbcType=INTEGER},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_salt = #{userSalt,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <select id="chaUserById" resultMap="BaseResultMap">
  	SELECT * FROM users WHERE user_id=#{userId}
  </select>
  
  <select id="chaRoleList" resultMap="roleMap">
	SELECT * FROM sys_permission sp
	INNER JOIN sys_role_permission srp
	ON srp.permission_id = sp.permission_id
	INNER JOIN sys_role sr
	ON srp.role_id = sr.role_id
	INNER JOIN sys_user_role sur
	ON sur.role_id = sr.role_id
	INNER JOIN users us
	ON us.user_id=sur.user_id
	WHERE us.user_id=#{userId}
  </select>
  
  <resultMap type="com.sc.crm.bean.Role" id="roleMap">
  	<id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  	<collection property="permissionList" column="permission_id" ofType="com.sc.crm.bean.Permission">
    	<id column="permission_id" property="permissionId" jdbcType="INTEGER" />
	   	<result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
	   	<result column="permission_type" property="permissionType" jdbcType="VARCHAR" />
	   	<result column="permission_url" property="permissionUrl" jdbcType="VARCHAR" />
	   	<result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
	   	<result column="permission_parentid" property="permissionParentid" jdbcType="INTEGER" />
	   	<result column="permission_parentids" property="permissionParentids" jdbcType="VARCHAR" />
	   	<result column="permission_sotr" property="permissionSotr" jdbcType="VARCHAR" />
  	</collection>
  </resultMap>
  
   <select id="perListPer" resultMap="perMap">
	SELECT sp.*,spp.permission_id per_id,spp.permission_name per_name,
	spp.permission_type per_type,spp.permission_url per_url,
	spp.permission_code per_code,spp.permission_parentid per_parenid,
	spp.permission_parentids per_parentids,spp.permission_sotr per_sotr
	FROM sys_permission sp INNER JOIN sys_permission spp 
	ON sp.permission_id = spp.permission_parentid
	INNER JOIN sys_role_permission srp
	ON srp.permission_id = sp.permission_id
	INNER JOIN sys_role sr
	ON srp.role_id = sr.role_id
	INNER JOIN sys_user_role sur
	ON sur.role_id = sr.role_id
	WHERE sur.user_id=#{userId}
  </select>
    <resultMap id="perMap" type="com.sc.crm.bean.Permission" >
    <id column="permission_id" property="permissionId" jdbcType="INTEGER" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="permission_type" property="permissionType" jdbcType="VARCHAR" />
    <result column="permission_url" property="permissionUrl" jdbcType="VARCHAR" />
    <result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
    <result column="permission_parentid" property="permissionParentid" jdbcType="INTEGER" />
    <result column="permission_parentids" property="permissionParentids" jdbcType="VARCHAR" />
    <result column="permission_sotr" property="permissionSotr" jdbcType="VARCHAR" />
    <collection property="perList" column="permission_parentid" ofType="com.sc.crm.bean.Pee">
    	<id column="per_id" property="perId" jdbcType="INTEGER" />
	    <result column="per_name" property="perName" jdbcType="VARCHAR" />
	    <result column="per_type" property="perType" jdbcType="VARCHAR" />
	    <result column="per_url" property="perUrl" jdbcType="VARCHAR" />
	    <result column="per_code" property="perCode" jdbcType="VARCHAR" />
	    <result column="per_parentid" property="perParentid" jdbcType="INTEGER" />
	    <result column="per_parentids" property="perParentids" jdbcType="VARCHAR" />
	    <result column="per_sotr" property="perSotr" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  
  
</mapper>