<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sc.crm.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.sc.crm.bean.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sc.crm.bean.Role" >
    insert into sys_role (role_id, role_name)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sc.crm.bean.Role" keyProperty="roleId" useGeneratedKeys="true">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.crm.bean.Role" >
    update sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.crm.bean.Role" >
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
    <select id="getRoleById" resultMap="roleMap">
	SELECT sr.*,sp.* FROM sys_permission sp
	INNER JOIN sys_role_permission srp
	ON srp.permission_id = sp.permission_id
	INNER JOIN sys_role sr
	ON srp.role_id = sr.role_id
    where srp.role_id=#{roleId}
  </select>
  
  <resultMap type="com.sc.crm.bean.Role" id="roleMap">
  	<id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  	<collection property="permissionList" column="permission_id" ofType="com.sc.crm.bean.Permission">
    	<id column="permission_id" property="permissionId" jdbcType="INTEGER" />
	   	<result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
	   	<result column="permission_type" property="permissionType" jdbcType="VARCHAR" />
	   	<result column="permission_url" property="permissionUrl" jdbcType="VARCHAR" />
	   	<result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
	   	<result column="permission_parentid" property="permissionParentid" jdbcType="INTEGER" />
	   	<result column="permission_parentids" property="permissionParentids" jdbcType="VARCHAR" />
	   	<result column="permission_sotr" property="permissionSotr" jdbcType="VARCHAR" />
  	</collection>
  </resultMap>
  
  <select id="getAllRole" resultMap="BaseResultMap">
  	select * from sys_role
  </select>
  
  
</mapper>